<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:dwr="http://www.directwebremoting.org/schema/spring-dwr"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:jms="http://www.springframework.org/schema/jms"  
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.2.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
	http://www.springframework.org/schema/mvc 
	http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
	http://www.springframework.org/schema/jms 
	http://www.springframework.org/schema/jms/spring-jms-3.0.xsd">

	<!-- js文件夹下的资源不拦截 -->
	<mvc:annotation-driven />
	<mvc:resources mapping="/js/**" location="/js/" />

    <!-- 自动扫描包 相关示例-->
    <context:component-scan base-package="com.xy.sm" />
 	
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations" value="classpath:jdbc.properties"/>
	</bean>
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />   
        <property name="configLocation" value="classpath:mybatis.xml" />  
    </bean>
 	
 	<!-- 配置SqlSessionTemplate -->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">
	    <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	<!-- 视图解析器 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">  
        <!-- 自动给return的字符串加上前缀和后缀，变成一个 可用的url地址 -->  
        <property name="prefix" value="/view/" />
        <property name="suffix" value=".jsp" />  
    </bean>
    
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">  
        <property name = "dataSource" ref="dataSource" />  
	</bean>
    
    <!-- 支持上传文件 -->  
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>
    
    <!-- Spring提供的JMS工具类，它可以进行消息发送、接收等 -->  
    <!-- <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">  
        这个connectionFactory对应的是我们定义的Spring提供的那个ConnectionFactory对象  
        <property name="connectionFactory" ref="connectionFactory"/>  
    </bean> -->  
       
    <!-- 真正可以产生Connection的ConnectionFactory，由对应的 JMS服务厂商提供-->  
    <!-- <bean id="targetConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">  
        <property name="brokerURL" value="tcp://localhost:61616"/>  
    </bean> -->  
       
    <!-- Spring用于管理真正的ConnectionFactory的ConnectionFactory -->  
    <!-- <bean id="connectionFactory" class="org.springframework.jms.connection.SingleConnectionFactory">  
        目标ConnectionFactory对应真实的可以产生JMS Connection的ConnectionFactory  
        <property name="targetConnectionFactory" ref="targetConnectionFactory"/>  
    </bean> -->  
       
    <!--这个是队列目的地-->  
    <!-- <bean id="queueDestination" class="org.apache.activemq.command.ActiveMQQueue">  
        <constructor-arg>  
            <value>MyQueue</value>  
        </constructor-arg>  
    </bean> -->  
<!--     消息监听器   -->
    <!-- <bean id="mqListener" class="com.xy.sm.listener.MQListener"/>   -->
<!--     消息监听容器   -->
    <!-- <bean id="jmsContainer"  
        class="org.springframework.jms.listener.DefaultMessageListenerContainer">  
        <property name="connectionFactory" ref="connectionFactory" />  
        <property name="destination" ref="queueDestination" />  
        <property name="messageListener" ref="mqListener" />  
    </bean>   -->
	
</beans>